{"version":3,"sources":["About.js","MyGame.js","PubProj.js","Notes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","large","width","spacing","height","About","classes","Grid","item","xs","container","Paper","elevation","Typography","variant","Link","href","fontSize","Avatar","src","className","root","minWidth","bullet","display","margin","transform","title","pos","marginBottom","MyGames","React","useState","Card","CardContent","component","color","CardActions","Button","PubProj","createData","name","desc","rows","Notes","TableContainer","Table","table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","scope","small","heightlarge","paddingonly","padding","App","content","value","setValue","undefined","MyGame","AppBar","position","Toolbar","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6af38419.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Container,AppBar,Avatar,Grid,Button,Link,Paper,Toolbar,CardActions,Card,CardMedia,Typography,CardContent,CardActionArea} from '@material-ui/core'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(40),\n        height: theme.spacing(40),\n      },\n}));\n\n\n\nfunction About() {\n\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n        <Grid container spacing={3}>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={5}>\n                <Paper elevation={0}>\n                    <Typography variant=\"h3\">Hello World!</Typography>\n                    <Typography variant=\"h5\">\n                        My name is Ke Li.<br/>\n                        Currently: Activision Central Technology, Jr. Software Engineer<br/>\n                        2019.9-2020.12: Columbia University, MS in Computer Science<br/>\n                        2015.9-2019.6: Zhejiang University, BE in Software Engineer<br/>\n                    </Typography>\n                    <Link href=\"https://www.linkedin.com/in/koko-li/\"><LinkedInIcon fontSize={'large'}/></Link>\n                </Paper>\n            </Grid>\n            <Grid item xs={4}>\n                <Paper elevation={0}>\n                    <Avatar src=\"/Selfi.jpeg\" className={classes.large}/>\n                </Paper>\n            </Grid>\n            <Grid item xs={2}>\n            </Grid>\n        </Grid>\n    </Grid>\n  );\n}\n\nexport default About;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Container,AppBar,Avatar,Grid,Button,Link,Paper,Toolbar,CardActions,Card,CardMedia,Typography,CardContent,CardActionArea} from '@material-ui/core'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import {Container,Row,Col} from 'react-bootstrap'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n\n\nfunction MyGames() {\n\n  const classes = useStyles();\n  const [value,setValue] = React.useState();\n\n  return (\n    <Grid item xs={12}>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                Runaway from zombies\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Turn-Based Strategy\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                Carefully make decisions to move your character to avoid being caught by zombies!<br/>And then escape!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button href=\"/games/runawayfromzombies/run_from_zombies.html\">Play</Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                Runaway from zombies 2\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Realtime\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                Real-time escape game!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button href=\"/games/runawayfromzombies2/runaway_from_zombies2.html\">Play</Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default MyGames;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Container,AppBar,Avatar,Grid,Button,Link,Paper,Toolbar,CardActions,Card,CardMedia,Typography,CardContent,CardActionArea} from '@material-ui/core'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import {Container,Row,Col} from 'react-bootstrap'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\n\n\nfunction PubProj() {\n\n  const classes = useStyles();\n  const [value,setValue] = React.useState();\n\n  return (\n    <Grid item xs={12}>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                MemCloak: Practical Access Obfuscation for Untrusted Memory\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n              Weixin Liang, Kai Bu, <b>Ke Li</b>, Jinhong Li, and Arya Tavakoli<br/>\n              in Proc. of 2018 Annual Computer Security Applications Conference (ACSAC)<br/>\n              San Juan, Puerto Rico, USA, December 3-7, 2018.\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n              Access patterns over untrusted memory have long been exploited to\n              infer sensitive information like program types or even secret keys.\n              Most existing obfuscation solutions hide real memory accesses\n              among a sufficiently large number of dummy memory accesses.\n              Such solutions lead to a heavy communication overhead and more\n              often apply to the client/server scenario instead of the CPU/memory\n              architecture. Sporadic obfuscation solutions strive for an affordable\n              memory bandwidth cost at the expense of security degradation. For\n              example, they may have to obfuscate accesses over a limited range\n              of memory space to control the overhead.<br/>\n              In this paper, we present MemCloak to obfuscate accesses throughout\n              the entire memory space with an O(1) communication overhead.\n              We advocate leveraging data redundancy to achieve extremely efficient\n              obfuscation. Loading multiple duplicates of a data block in\n              memory, MemCloak enables the CPU to fetch the same data by\n              accessing different memory locations. This breaks the condition\n              for snooping the access pattern. Moreover, we leverage data aggregation\n              to improve memory utilization. It enables the CPU to\n              fetch the same aggregated data block times from the same memory\n              location but each time for a different data block therein. This\n              further prohibits an attacker from correlating memory accesses.\n              We propose a series of optimization techniques to compress the\n              position that tracks memory layout. The optimized position map\n              is hundreds of times smaller than the traditional position map. It\n              takes only several megabytes for protecting a 4 GB memory and\n              can fit in an on-chip cache or buffer. We implement MemCloak\n              using the gem5 simulator and validate its performance using highly\n              memory-intensive MiBench benchmarks.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button href=\"https://dl.acm.org/citation.cfm?doid=3274694.3274695\">Learn More</Button>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={4}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FauxBuster: A Content-free Fauxtography Detector Using Social Media Comments\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Daniel (Yue) Zhang, Lanyu Shang, Biao Geng, Shuyue Lai, <b>Ke Li</b>, Hongmin Zhu, Md Tanvir Amin, and Dong Wang.<br/>\n                In Big Data (Big Data), 2018 IEEE International Conference on. IEEE, 2018.<br/>\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n              Social media sensing has emerged as a new big data application paradigm to collect observations and claims about the measured variables in physical environment from common citizens. A fundamental problem in social media sensing applications lies in estimating the evolving truth of claims and the reliability of data sources without knowing either of them a priori, which is referred to as dynamic truth discovery. We identified two critical challenges that are not fully addressed by solutions from current literature. The first challenge is “physical constraint-awareness” where the transition of truth is constrained by some physical rules that must be followed to ensure correct estimation of the evolving truth. The second one is “noisy and incomplete data” where the social media sensing data is sparse in nature and contains a lot of rumors and misinformation, making it difficult to capture the constantly evolving truth of measured variables. In this paper, we developed a new Constraint-Aware Dynamic Truth Discovery (CA-DTD) scheme to address the above challenges. To address the physical constraint-awareness challenge, CA-DTD develops a new constraint-aware Hidden Markov Model to effectively infer the evolving truth of measured variables by incorporating physical constraints. To address the noisy and incomplete data challenge, CA-DTD fuses sensing observations from online social media with information from traditional news media using a principled approach. We evaluate CA-DTD scheme using two real-world social media sensing data traces and the results show that CA-DTD significantly outperforms the state-of-the-art baselines.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button href=\"https://ai.google/research/pubs/pub47587\">Learn More</Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PubProj;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grid,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Link} from '@material-ui/core'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import {Container,Row,Col} from 'react-bootstrap'\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nfunction createData(name, desc) {\n  return { name, desc };\n}\n\nconst rows = [\n  createData((<Link href=\"/notes/reactjs.md\">React</Link>), 'Some notes: reactjs/material.io'),\n  createData((<Link href=\"/notes/cocos.md\">Cocos2dx</Link>), 'Cocos2dx Game Engine'),\n  createData((<Link href=\"/notes/xcode.md\">Xcode</Link>), 'Xcode Usage'),\n  createData((<Link href=\"/notes/zookeeper.md\">Zookeeper</Link>), 'Zookeeper Usage'),\n  createData((<Link href=\"/notes/cloudserver.md\">Cloudserver</Link>), 'Notes related to server operations'),\n  createData((<Link href=\"/notes/c++style.md\">C++style</Link>), 'Google style'),\n  createData((<Link href=\"/notes/KN01.md\">Distributed Systems</Link>), 'Consistency protocal'),\n  createData((<Link href=\"/notes/KN02.md\">Tair</Link>), 'Ali\\'s distributed system'),\n];\n\nfunction Notes() {\n\n  const classes = useStyles();\n  const [value,setValue] = React.useState();\n\n  return (\n    <Grid item xs={12}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Desc</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell>{row.desc}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n}\n\nexport default Notes;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Container,AppBar,Avatar,Grid,Button,Paper,Toolbar} from '@material-ui/core'\n\nimport About from './About'\nimport MyGames from './MyGame'\nimport PubProj from './PubProj'\nimport Notes from './Notes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  heightlarge: {\n    height: theme.spacing(7),\n  },\n  paddingonly: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const icon = \"/favicon.ico\";\n  const [value,setValue] = React.useState();\n\n  // console.log(\"value is\",value);\n\n  var content;\n  if(value == 0 || value == undefined){\n    content = (\n      <About />\n    )\n  }else if(value == 1){\n    content = (\n      <MyGames/>\n    )\n  }else if(value == 2){\n    content = (\n      <PubProj/>\n    )\n  }else if(value == 3){\n    content = (\n      <Notes/>\n    )\n  }\n  // console.log(content)\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <AppBar position=\"sticky\">\n            <Toolbar className={classes.paddingonly}>\n              <Avatar alt=\"Remy Sharp\" src={icon} className={classes.large}/>\n              <Button color=\"transparent\" className={classes.heightlarge} onClick={() => {setValue(0);}}>About</Button>\n              <Button color=\"transparent\" className={classes.heightlarge} onClick={() => {setValue(1);}}>My Games</Button>\n              <Button color=\"transparent\" className={classes.heightlarge} onClick={() => {setValue(2);}}>Pub&Proj</Button>\n              <Button color=\"transparent\" className={classes.heightlarge} onClick={() => {setValue(3);}}>Notes</Button>\n            </Toolbar>\n          </AppBar>\n        </Grid>\n        {content}\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}